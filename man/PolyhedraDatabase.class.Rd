% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db-lib.R
\docType{class}
\name{PolyhedraDatabase.class}
\alias{PolyhedraDatabase.class}
\title{Polyhedra database}
\arguments{
\item{create.dir}{if dir does not exists, create it}

\item{extension}{extension of the polyhedron filename}

\item{polyhedron.name}{polyhedron description}

\item{strict}{halts execution if polyhedron not found}

\item{source}{source description}

\item{source.filename}{filename of the polyhedron source definition}

\item{polyhedron}{polyhedron object}

\item{overwrite}{overwrite exiting definition}

\item{source.config}{source configuration for scraping files}

\item{seed}{seed for deterministic random generator}

\item{mode}{covering mode. Available values are "scrape.queued", "scrape.retry","skipped",  "test"}

\item{covering.code}{code for applying in covering}

\item{time2scrape.source}{maximum time to spend scraping each source}

\item{skip.still.queued}{Flag unscraped files with status `skipped``}

\item{polyhedra.names}{polyhedra names to cover (optional)}

\item{TestTaskClass}{an R6 TestTaskClass class}

\item{sources.config}{sources configurations for scraping files}

\item{source.filenames}{filenames of the polyhedron source definition}

\item{max.quant}{maximum filenames to process}

\item{save.on.change}{saves Database state after operation}

\item{sources}{sources names}

\item{search.string}{string for matching polyhedron names}

\item{ignore.case}{ignore case in search string}
}
\value{
A new `PolyhedraDatabase` object.

Database version

Database version

boolean value

PolyhedraDatabase.class object

boolean value

string with polyhedra sources path

string with polyhedron filename

Polyhedron.class object

Polyhedron.class object

Modified `PolyhedraDatabase` object.

saveRDS return status

A list with resulting objects covered

A list with resulting objects covered

A list with resulting objects tested

A list with resulting TestTasks generated

Modified `PolyhedraDatabase` object.

A vector with names of available sources

A list with resulting objects covered
}
\description{
Scrapes all polyhedra in data folder to save a representation which
is accessible by the final users upon call to \code{getPolyhedron()}.

Create a new PolyhedraDatabase object.

get the version of the current object.

sets the path of the RDS object

Determines if the source exists on
  the database

add  source.config to the database

Determines if the database includes a polyhedron which name
matches the parameter value

gets polyhedra sources folder

gets the filename of the polyhedron matching parameter.

gets polyhedron object which name
matches the parameter value

add polyhedron object to the database

Process parameter filenames using source.config parameter

saveRDS

Cover objects and applies covering.code parameter

Scrape polyhedra queued sources

testRR

generate Test tasks for selected polyhedra

Schedules polyhedra sources for scraping

Returns available sources in current database

Retrieves all polyhedron within the source those names match with search.string
}
\section{Fields}{

\describe{
\item{\code{version}}{version of database file}

\item{\code{polyhedra.rds.file}}{path of rds database file}

\item{\code{sources.config}}{Sources configuration for scraping different sources}

\item{\code{ledger}}{rr ledger of scraping process}
}}

