% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polyhedra-lib.R
\docType{class}
\name{PolyhedronStateDeserializer}
\alias{PolyhedronStateDeserializer}
\title{PolyhedronStateDeserializer}
\description{
Polyhedron state for deserialize from database
}
\author{
ken4rab
}
\section{Super class}{
\code{\link[Rpolyhedra:PolyhedronState]{Rpolyhedra::PolyhedronState}} -> \code{PolyhedronStateDeserializer}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{serialized.polyhedron}}{polyhedron definition serialized}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PolyhedronStateDeserializer$new()}}
\item \href{#method-scrape}{\code{PolyhedronStateDeserializer$scrape()}}
\item \href{#method-clone}{\code{PolyhedronStateDeserializer$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="addError">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-addError}{\code{Rpolyhedra::PolyhedronState$addError()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="applyTransformationMatrix">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-applyTransformationMatrix}{\code{Rpolyhedra::PolyhedronState$applyTransformationMatrix()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="buildRGL">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-buildRGL}{\code{Rpolyhedra::PolyhedronState$buildRGL()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="checkEdgesConsistency">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-checkEdgesConsistency}{\code{Rpolyhedra::PolyhedronState$checkEdgesConsistency()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="exportToXML">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-exportToXML}{\code{Rpolyhedra::PolyhedronState$exportToXML()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="getName">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-getName}{\code{Rpolyhedra::PolyhedronState$getName()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Rpolyhedra" data-topic="PolyhedronState" data-id="getSolid">}\href{../../Rpolyhedra/html/PolyhedronState.html#method-getSolid}{\code{Rpolyhedra::PolyhedronState$getSolid()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize PolyhedronStateDeserializer object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PolyhedronStateDeserializer$new(serialized.polyhedron)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{serialized.polyhedron}}{a serialized polyhedron}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new  PolyhedronStateDeserializer object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-scrape"></a>}}
\if{latex}{\out{\hypertarget{method-scrape}{}}}
\subsection{Method \code{scrape()}}{
Generates a PolyhedronStateDefined from a serialized polyhedron
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PolyhedronStateDeserializer$scrape()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new  PolyhedronStateDefined object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PolyhedronStateDeserializer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
