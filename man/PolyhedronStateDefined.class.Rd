% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polyhedra-lib.R
\name{PolyhedronStateDefined.class}
\alias{PolyhedronStateDefined.class}
\title{Polyhedron State scraped and defined}
\arguments{
\item{source}{the library to use}

\item{file.id}{identifier of the definition file.}

\item{name}{the polyhedron name}

\item{net}{the net}

\item{symbol}{the symbol}

\item{dual}{whether it is dual or not}

\item{sfaces}{the solid faces}

\item{svertices}{the solid vertices}

\item{hinges}{the hinges}

\item{dih}{the dih}

\item{normalize.size}{whether it has to normalize the size or not}

\item{solid}{toggles the production of solid vertices.}

\item{force.recalculation}{forces the recalculation of the edges}

\item{force}{forces the triangulation.}

\item{vertices.id.3d}{the vertices ids}

\item{applyTransformation}{does it need to apply transformations?}

\item{size}{the object's size}

\item{vertices}{input vertices}

\item{transformation.matrix}{the transformation matrix}

\item{polyhedron}{the polyhedron to compare to.}
}
\value{
A new  PolyhedronStateDefined object.

current object

string with polyhedron name

string with polyhedron symbol

modified  PolyhedronStateDefined object.

the convex hull

an applied transformation.matrix
}
\description{
object initialization routine

scrape polyhedron.
As the state is defined this functions do nothing

get Polyhedron name

get Polyhedron symbol

adjust polyhedron Vertices

Get the polyhedron state

Gets the net property

Gets the solid property

Infer edges

Checks edges consistency

Triangulates the polyhedron

Gets the convex hull

Calculates the center of mass.

Gets the normalized size

Gets the transformed vertices

Resets the transformation matrix

Apply transformation matrix to polyhedron

Build 'rgl'

Exports the object to XML format

Determines if a polyhedron is equal to this one.

Serialize the object.
}
\section{Fields}{

\describe{
\item{\code{file.id}}{polyhedron filename in original}

\item{\code{source}}{polyhedron definition source (netlib|dmccooey)}

\item{\code{name}}{polyhedron name (netlib|dmccooey)}

\item{\code{symbol}}{the eqn(1) input for two symbols separated by a tab;
the Johnson symbol, and the Schlafli symbol (netlib)}

\item{\code{dual}}{the name of the dual polyhedron optionally followed
by a horizontal tab and the number of the dual (netlib)}

\item{\code{sfaces}}{polyhedron solid face list (netlib)}

\item{\code{svertices}}{polyhedron solid vertices list (netlib)}

\item{\code{vertices}}{Polyhedron vertices list (netlib|dmccooey)}

\item{\code{vertices.centered}}{centered vertices for applying
transformation matrices}

\item{\code{net}}{polyhedron 2D net model with vertices defined for
a planar representation (netlib)}

\item{\code{solid}}{polyhedron list of edges which generate a
solid (netlib|dmccooey)}

\item{\code{hinges}}{Polyhedron hinge list (netlib)}

\item{\code{dih}}{Dih attribute (netlib)}

\item{\code{edges}}{polyhedron edges (netlib|dmccooey)}

\item{\code{transformation.matrix}}{transformation matrix for
calculations and visualizing polyhedron}
}}

